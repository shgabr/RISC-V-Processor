
#ALU Operation instructions (with hazards)
addi	x1, x0, 25	#x1 = 00000000_00000000_00000000_00011001 => 25
addi	x2, x0, 102	#x2 = 00000000_00000000_00000000_01100110 => 102
or 	x2, x1, x2	#x2 = 00000000_00000000_00000000_01111111 => 127	(forwarding)

addi	x3, x0, 12	#x3 = 00000000_00000000_00000000_00001100 => 12
addi	x4, x0, 1	#x4 = 00000000_00000000_00000000_00000001 => 1
sll	x3, x3, x4	#x3 = 00000000_00000000_00000000_00011000 => 24		(forwarding)
srl	x1, x1, x4	#x1 = 00000000_00000000_00000000_00001100 => 12	
	
addi	x5, x0, -3	#x5 = 11111111_11111111_11111111_11111101 => -3
sra	x5, x5, x4	#x5 = 11111111_11111111_11111111_11111110 => -2		(forwarding)
xor	x4, x4, x2	#x4 = 00000000_00000000_00000000_01111110 => 126	
and	x3, x1, x3 	#x3 = 00000000_00000000_00000000_00001000 => 8
add	x1, x5, x1	#x1 = 00000000_00000000_00000000_00001010 => 10		
sub	x2, x2, x5	#x2 = 00000000_00000000_00000000_10000001 => 129


ecall

# FINAL VALUES
#	x1	---> 10
#	x2	---> 129
#	x3	---> 8
#	x4	---> 126 
#	x5	---> -2
